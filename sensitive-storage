#!/bin/bash 

set -euEo pipefail

declare SCRIPT_FILE_PATH
SCRIPT_FILE_PATH="${0}"
export SCRIPT_FILE_PATH


trap 'echo "Something went wrong :(" >&2' ERR


main()
{
    declare action
    action="${1}"
    shift 1

    case "${action}" in

        list-media | list | l )
                list_media "${@}"
            ;;

        medium-mount-point | mount-point | mp )
                medium_mount_point "${@}"
            ;;

        mount-medium | mount | m )
                mount_medium "${@}"
            ;;

        unmount-medium | unmount | umount | u )
                unmount_medium "${@}"
            ;;

        * )
                die "Unknown action! "

    esac
}


list_media()
{
    find "$( medium_folder_path )" \
        -name "*.medium" -exec basename "{}" ".medium" \;
}


mount_medium()
{
    declare -a args
    args=()

    declare helper
    helper=""

    while true; do
        case "${1:-}" in
            --helper | -h )
                    helper="${2}"
                    shift 2
                ;;

            --helper=* )
                    helper="${1#"--helper="}"
                    shift 1
                ;;
            '' )
                    break
                ;;

            * )
                args+=("${1}")
                shift 1
                ;;
        esac
    done

    set -- "${args[@]}"

    declare medium
    medium="${1}"
    
    declare default_mount_point
    default_mount_point=$(
        source "$( medium_file_path "${medium}" )"
        echo ${MOUNT_POINT}
    )

    declare mount_point
    mount_point="${2:-"${default_mount_point}"}"

    mkdir -p "${mount_point}"

    (
        source "$( medium_file_path "${medium}" )"
        mount_callback "${mount_point}" "x-sensitive-storage-medium=${medium}" "${helper}"
    )
}


unmount_medium()
{
    declare -a args
    args=()

    declare internal_only
    internal_only=false

    while true; do
        case "${1:-}" in
            --internal-only | -i )
                    internal_only=true
                    shift 1
                ;;

            '' )
                    break
                ;;

            * )
                args+=("${1}")
                shift 1
                ;;
        esac
    done

    set -- "${args[@]}"

    declare mount_point
    declare medium
    if mountpoint -q "${1}"; then
        mount_point="${1}"
        medium=$( 
            mount -v | \
            jc --mount | \
            jq \
                -r \
                --arg mount_point "${mount_point}" \
                    '.[] | select(.mount_point | contains($mount_point)) | .options[] | select(. | contains("x-sensitive-storage-medium="))' | \
            awk -F "=" '{ print($2) }'
        )
    else
        medium="${1}"
        mount_point=$( 
            mount -v | \
            jc --mount | \
            jq \
                -r \
                --arg medium "${medium}" \
                    '.[] | select(.options[] | contains("x-sensitive-storage-medium=" + $medium)) | .mount_point'
        )
    fi

    (
        source "$( medium_file_path "${medium}" )"
        unmount_callback "${mount_point}" ${internal_only}
    )
}


die()
{
    echo "${*}" >&2
    exit 1
}


medium_mount_point()
{
    declare medium
    medium="${1}"
    (
        source "$( medium_file_path "${medium}" )"
        echo ${MOUNT_POINT}
    )
}


medium_file_path()
{
    declare medium
    medium="${1}"
    shift 1
    echo "$( medium_folder_path )/${medium}.medium"
}


medium_folder_path()
{
    # echo "$( dirname "${SCRIPT_FILE_PATH}" )/sensitive-storages"
    echo "/etc/sensitive-storages"
}



main "${@}"